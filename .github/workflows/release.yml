name: Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
  workflow_dispatch: {}

env:
  PROJECT_NAME: cpp-conan-example
  APP_BINARY_PATH: build/bin/opencv_example
  PURGE_CACHE: "1" # Change this value to purge cache
  CONAN_VERSION: "1.47.0"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        include:
          - runner_os: macos-12
            conan_profile: macos-github-runner

    steps:
      - uses: actions/checkout@master
      - name: Install Conan
        run: |
          python3 -m pip install -U pip
          python3 -m pip install conan==${{ env.CONAN_VERSION }}
      - name: Copy configuration files
        run: |
          mkdir -p ~/.conan/profiles/
          cp conan_files/conan-github-runner.conf ~/.conan/conan.conf && \
          cp conan_files/profiles/* ~/.conan/profiles/
      - name: Cache Conan packages
        id: cache-conan-build
        uses: actions/cache@v2
        with:
          path: |
            .conan-download-cache
          key: ${{ runner.os }}-conan-build-${{ hashFiles('conan_files/conanfile.txt') }}-${{ env.PROJECT_NAME }}-${{ env.PURGE_CACHE }}
          restore-keys: |
            ${{ runner.os }}-conan-build-${{ hashFiles('conan_files/conanfile.txt') }}-${{ env.PROJECT_NAME }}-
      - name: Conan install dependencies and generate the project
        run: |
          conan install ./conan_files  \
            --install-folder ./build \
            -pr:b ${{ matrix.conan_profile }} \
            --build missing
      - name: Conan build the project ${{ env.PROJECT_NAME }}
        run: |
          conan build conan_files --build-folder build --source-folder .
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: "${{ runner.os }}-${{ env.PROJECT_NAME }}"
          path: ${{ env.APP_BINARY_PATH }}
